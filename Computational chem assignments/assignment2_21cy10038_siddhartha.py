# -*- coding: utf-8 -*-
"""Assignment2_21CY10038_Siddhartha.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_Fm3pGBJWOZ9xUHUnuIyd-g2yu4vaud_
"""

import matplotlib.pyplot as plt
import numpy as np

num = input("What is the number of particles?")   #num is the number particles

#potential energy function
e = float(input("what is the value of epsilon?"))    #epsilon KJ/mol
s = float(input("what is the value of sigma?"))     #sigma   Ang
l = float(input("What is the value of lambda?"))
dr = float(input("What is the value of dr?"))

def plot_function(V, r):
  plt.plot(r, V)
  plt.xlabel("r")
  plt.ylabel("V")
  plt.legend()
  plt.show()
  plt.grid = True


def potential_energy(n , V):    #for potential energy of particles at equal distances
  PE = 0
  for k in range(0, n-1):
    for j in range(1, n):
      PE += V

  return V


def square_well(r):
  if r < s:   #units are in Angstrom
    V = 2
    # print("Input cannot be used")
  elif r > s and r < s*l:    #lambda = 2
    V = -e    #units are in KJ/mol
  else:
    V = 0
  return V


def soft_sphere(r, nu):
  if r > 0 :
    V = e*(s/r)**nu
    if V > 2:
      V = 2
    return V

def lennard_jones(r):
  if r>0:
    V = 4*e*((s/r)**12 - (s/r)**6)
    if V > 2:
      V = 2
  return V



r_plot = np.arange(3, 12 + dr, dr)

V_sw = [square_well(p) for p in r_plot]
V_l = [lennard_jones(p) for p in r_plot]
V_ss = [soft_sphere(p, 1) for p in r_plot]
V_ss2 = [soft_sphere(p, 10) for p in r_plot]


PE = input("Which potential function? \n 1 for square well \n 2 for lennard jones \n 3 for soft sphere with nu = 1 \n 4 for soft sphere with nu = 10 \n")
if PE == "1":
  V = V_sw
  plt.title("square well")
  plot_function(V_sw, r_plot)


elif PE == "2":
  V = V_l
  plt.title("lennard jones")
  plot_function(V_l, r_plot)

elif PE == "3":
  V = V_ss
  plt.title("soft sphere, nu = 1")
  plot_function(V_ss, r_plot)

elif PE == "4":
  V = V_ss2
  plt.title("soft sphere, nu = 10")
  plot_function(V_ss2, r_plot)

r_plot = np.arange(3, 12.1, 0.1)    #epsilon = 1, sigma = 3.4, lambda = 2, dr = 0.1
V_sw = [square_well(p) for p in r_plot]
V_l = [lennard_jones(p) for p in r_plot]
V_ss = [soft_sphere(p, 1) for p in r_plot]
V_ss2 = [soft_sphere(p, 10) for p in r_plot]

plt.plot(r_plot, V_sw, label = "square well")
plt.plot(r_plot, V_l, label = "lennard jones")
plt.plot(r_plot, V_ss, label = "soft sphere, nu = 1")
plt.plot(r_plot, V_ss2, label = "soft sphere, nu = 10")
plt.xlabel("r")
plt.ylabel("V")
plt.legend()
plt.show()

