# -*- coding: utf-8 -*-
"""Assignment4 21CY10038.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19RYHzqGXl0eZqqPf_bW7w2sKwOsSBpBZ
"""

import numpy as np
import pandas as pd
import random
import math

from google.colab import files
uploaded = files.upload()

filename = list(uploaded.keys())[0]
df = pd.read_csv(filename, delim_whitespace=True, skiprows=1, names = ['x(A)','y(A)', 'z(A)'])
df.head()

df



def pbc(x,y,z, count, n):      #PBC cell length = n Ang
  for i in range(len(x)):
    if x[i] > n/2:
      x[i] = x[i] - n
      count.append(x[i])


    elif x[i] < -n/2:
      x[i] = x[i] + n
      count.append(x[i])


    if y[i] > n/2:
      y[i] = y[i] - n
      count.append(y[i])


    elif y[i] < -n/2:
      y[i] = y[i] + n
      count.append(y[i])

    if z[i] > n/2:
      z[i] = z[i] - n
      count.append(z[i])

    elif z[i] < -n/2:
      z[i] = z[i] + n
      count.append(z[i])

  return x,y,z


#For calculating the distance travelled by each particle

def dist(x, y, z, X, Y, Z):
  dist = math.sqrt((x-X)**2 + (y-Y)**2 + (z-Z)**2)
  return dist

#list for keeping track of the distance travelled by each molecule
zerolist = [0]*(len(df))




n = float(input("PBC cell length is: "))


X = df['x(A)']   #Individual columns
Y = df['y(A)']
Z = df['z(A)']




# print(X)


# for i in range(len(df)):
#   if df['x(A)'][i] < n and df['x(A)'][i] > -n:              #All units are in 1 Ang
#     X[i] = df['x(A)'][i]
#   if df['y(A)'][i] < n and df['y(A)'][i] > -n:
#     Y[i] = df['y(A)'][i]
#   if df['z(A)'][i] < n and df['z(A)'][i] > -n:
#     Z[i] = df['z(A)'][i]

dir = [1, -1]             #For choosing +1 or -1



count = []   #This for counting the number of times the particle goes outside the box

for i in range(len(df)):
  corr = random.choice(['X' , 'Y' , 'Z'])    #For choosing the coordinate

  corr1 = random.choice(dir)

  if corr == 'X':

    X[i] = X[i] + int(corr1)
    pbc(X,Y,Z, count, n)

  elif corr == 'Y':
    Y[i] = Y[i] + int(corr1)
    pbc(X,Y,Z, count, n)

  elif corr == 'Z':
    Z[i] = Z[i] + int(corr1)
    pbc(X,Y,Z, count, n)


print(f"number of times a particle has gone out {len(count)}")

X1=[]   #These lists are for appending 10th coordinate
Y1=[]
Z1=[]

X2=[]   #These lists are for appending 20th coordinate
Y2=[]
Z2=[]


#list which keeps track of distance travelled by each molecule
zerolist = [0]*(len(df))

x = X.copy()
y = Y.copy()
z = Z.copy()


for j in range(20):             #number of iterations

  count1 = []

  for i in range(len(df)):
    corr = random.choice(['X' , 'Y', 'Z'])


    if corr == 'X':
      x[i] = X[i]
      corr1 = random.choice(dir)
      X[i] = X[i] + int(corr1)

      pbc(X,Y,Z, count1, n)
      zerolist[i] += math.sqrt((x[i]-X[i])**2)

    elif corr == 'Y':
      y[i] = Y[i]
      corr1 = random.choice(dir)
      Y[i] = Y[i] + int(corr1)


      pbc(X,Y,Z, count1, n)
      zerolist[i] += math.sqrt((y[i]-Y[i])**2)

    elif corr == 'Z':
      z[i] = Z[i]
      corr1 = random.choice(dir)
      Z[i] = Z[i] + int(corr1)

      pbc(X,Y,Z, count1, n)
      zerolist[i] += math.sqrt((z[i]-Z[i])**2)

  if j == 9:
    for k in range(len(df)):
      X1.append(X[k])
      Y1.append(Y[k])
      Z1.append(Z[k])

  if j == 19:
    for k in range(len(df)):
      X2.append(X[k])
      Y2.append(Y[k])
      Z2.append(Z[k])


  if j == 9 or j == 19:
    print(f"Coordinates of {j}th iteration: ({X[i]}, {Y[i]}, {Z[i]})")

  print(f"Number of particles that have gone out in this iteration: {len(count1)} ")


print(f"Total distance travelled by each molecule after 20 iterations is \n {zerolist}")



for i in range(len(df)):
  print(f"The total distance travelled by {i}th molecule after 20 iterations is {zerolist[i]}")

max_zero = max(zerolist)
min_zero = min(zerolist)

print(f"Maximum distance travelled by a molecule {max_zero}, minimum distance: {min_zero}")

#Converting coordinate columns to data frame


df1 = pd.DataFrame(list(zip(X1, Y1, Z1)), columns = ['X', 'Y', 'Z'])
df1

df2 = pd.DataFrame(list(zip(X2, Y2, Z2)), columns = ['X', 'Y', 'Z'])
df2

# Converting the 10th coordinate df to txt file
df1.to_csv('data2.txt', sep=' ', index=False)

#Converting the 20th coordinate df to txt file
df2.to_csv('data3.txt', sep=' ', index=False)

df1

