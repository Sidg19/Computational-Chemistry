# -*- coding: utf-8 -*-
"""computationalchem21CY10038.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fQu1A60MfT0QTuLndv3KRkPFokvGdL8N
"""

import numpy

import numpy as np

import pandas as pd

from google.colab import files


uploaded = files.upload()







data1 = pd.read_csv('PROBLEM1.csv')

data1.rename(columns = {'vz' : 'N/a' , 'vy':'vz' , 'vx' : 'vy' , 'particle' : 'vx' , '#' : 'particles'}, inplace = True)

data1.shape

data1 = data1.drop('particles' , axis = 1)

data1

data2 = data1.to_numpy()

data2

KE = 0
KE_Total = 0

for i in range(10):
  for j in range(3):
    KE += 1/2*(data2[i][j]**2)*(10**(10))

KE_Total += KE
print(KE_Total)


#print(KE_Total)

##SECOND CASE

KE2 = 0
KE2_Total = 0
KE3 = 0
KE3_Total = 0

for k in range(5):
  for l in range(3):
    KE2 += 1/2*(data2[k][l]**2)   #mass1 = 1 kg

KE2_Total += KE2
print(KE2_Total)


for m in range(5,10):
  for n in range(3):
    KE3 += 1/2*2*(data2[m][n]**2)  #mass = 2 kg

KE3_Total += KE3
print(KE3_Total)


print(KE2_Total + KE3_Total)

def KE1():
  KE = 0
  KE_Total = 0

  N = int(input("What are the total number of particles: "))
  m = float(input('What are their masses?\n'))

  for i in range(N):
    for j in range(3):
      KE += 1/2*(data2[i][j]**2)*(10**(10))

  KE_Total += KE
  print(KE_Total)




def KE2():

  KE2 = 0
  KE2_Total = 0
  KE3 = 0
  KE3_Total = 0

  N1 = input("What are the total number of particles in the first group: ")
  N2 = input("What are the total number of particles in the second group: ")
  m1 = float(input('What are their masses in the first group?(in kgs)\n'))
  m2 = float(input('What are their masses in the second group?(in kgs)\n'))

  N1 = int(N1)
  N2 = int(N2)

  m1 = float(m1)
  m2 = float(m2)

  for k in range(N1):
    for l in range(3):
      KE2 += 1/2*m1*(data2[k][l]**2)*10**(10)   #mass1
  KE2_Total += KE2


  for m in range(N1,N1 + N2):
    for n in range(3):
      KE3 += 1/2*m2*(data2[m][n]**2)*10**(10)  #mass2

  KE3_Total += KE3


  print((KE2_Total + KE3_Total))

n = int(input("what are the number of components?"))

if n == 1:
  KE1()
else:
  KE2()



