# -*- coding: utf-8 -*-
"""Assignment6_21CY10038.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TqIxKjHpSwzZupuwzMbEySpwVj3XjVDv
"""

import numpy as np
import pandas as pd
import random
import math

from google.colab import files
uploaded = files.upload()

filename = list(uploaded.keys())[0]
df = pd.read_csv('argon_coord_05.txt',delim_whitespace=True, skiprows= 1)
df = df.drop(['(Step' , '1)'] , axis = 1)

df1 = df.iloc[0:365]
# print(df1.shape)
df2 = df.iloc[366:731]
# print(df2.shape)
df3 = df.iloc[732:1097]
# print(df3.shape)
df4 = df.iloc[1098:1463]
# print(df4.shape)
df5 = df.iloc[1464:1829]
# print(df5.shape)



n = float(input("Unit cell length is: "))


#Potential energy function Lennard Jones

e = 1          #Epsilon
si = 3.4       #Sigma

def LJ(r):
  V = 4*e*((si/r)**12 - (si/r)**6)
  return V

E = 0 #Potential energy

for i in range(1, 6):
    df = globals()[f'df{i}'].reset_index(drop=True)
    df['z'], df['y'], df['x'] = df['y'], df['x'], df['#']
    globals()[f'df_{i}'] = df.drop(['#'], axis=1)

    df['x'] = pd.to_numeric(df['x'], errors='coerce')
    df['y'] = pd.to_numeric(df['y'], errors='coerce')
    df['z'] = pd.to_numeric(df['z'], errors='coerce')
    # print(df1)

    X = df['x']   #Individual columns
    Y = df['y']
    Z = df['z']


    for k in range(len(df)):
      for l in range(k,len(df)):
        Lx = X[k] - X[l]
        Ly = Y[k] - Y[l]
        Lz = Z[k] - Z[l]
        if Lx > n/2:
          Lx = Lx - n
        elif Lx < -n/2:
          Lx = Lx + n

        if Ly > n/2:
          Ly = Ly - n
        elif Ly < -n/2:
          Ly = Ly + n

        if Lz > n/2:
          Lz = Lz - n
        elif Lz < -n/2:
          Lz = Lz + n

        d = math.sqrt(Lx**2 + Ly**2 + Lz**2)
        if d <= 10 and d>0:
          E += LJ(d)
        else:
          E += 0


    print(f"Energy of the {i}th system is : " , E)
    E = 0

#Force calculation

# count2 = []

F = 0 #force on each particle

for i in range(1, 6):
    df = globals()[f'df{i}'].reset_index(drop=True)
    df['z'], df['y'], df['x'] = df['y'], df['x'], df['#']
    globals()[f'df_{i}'] = df.drop(['#'], axis=1)

    df['x'] = pd.to_numeric(df['x'], errors='coerce')
    df['y'] = pd.to_numeric(df['y'], errors='coerce')
    df['z'] = pd.to_numeric(df['z'], errors='coerce')
    # print(df1)


    X = df['x']   #Individual columns
    Y = df['y']
    Z = df['z']

    print(f"run : {i}")
    for k in range(len(df)):
      for l in range(len(df)):
        if k==l:
          continue
        else:
          Lx = X[k] - X[l]
          Ly = Y[k] - Y[l]
          Lz = Z[k] - Z[l]
          if Lx > n/2:
            Lx = Lx - n
          elif Lx < -n/2:
            Lx = Lx + n

          if Ly > n/2:
            Ly = Ly - n
          elif Ly < -n/2:
            Ly = Ly + n

          if Lz > n/2:
            Lz = Lz - n
          elif Lz < -n/2:
            Lz = Lz + n

          d = math.sqrt(Lx**2 + Ly**2 + Lz**2)
          F += -LJ(d)/d*10**-7

      print(f"Force on {k}th particle is : {F}")
      F = 0
    print("\n")

